[1/11] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[2/11] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D D:\Espressif\_prj2\build\bootloader\esp-idf\esptool_py && D:\Espressif\python_env\idf5.0_py3.11_env\Scripts\python.exe D:/Espressif/frameworks/esp-idf-v5.0.7/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/Espressif/_prj2/build/bootloader/bootloader.bin"
Bootloader binary size 0x6760 bytes. 0x8a0 bytes (8%) free.
[3/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/src/display.c.obj
[4/9] Linking C static library esp-idf\main\libmain.a
[5/9] Generating ld/sections.ld
[6/9] Linking CXX executable main.elf
[7/9] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated D:/Espressif/_prj2/build/main.bin
[8/9] cmd.exe /C "cd /D D:\Espressif\_prj2\build\esp-idf\esptool_py && D:\Espressif\python_env\idf5.0_py3.11_env\Scripts\python.exe D:/Espressif/frameworks/esp-idf-v5.0.7/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/Espressif/_prj2/build/partition_table/partition-table.bin D:/Espressif/_prj2/build/main.bin"
main.bin binary size 0x33d30 bytes. Smallest app partition is 0x100000 bytes. 0xcc2d0 bytes (80%) free.
[8/9] cmd.exe /C "cd /D D:\Espressif\frameworks\esp-idf-v5.0.7\components\esptool_py && D:\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=D:/Espressif/frameworks/esp-idf-v5.0.7 -D SERIAL_TOOL=D:/Espressif/python_env/idf5.0_py3.11_env/Scripts/python.exe;;D:/Espressif/frameworks/esp-idf-v5.0.7/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=D:/Espressif/_prj2/build -P D:/Espressif/frameworks/esp-idf-v5.0.7/components/esptool_py/run_serial_tool.cmake"
esptool.py --chip esp32 -p COM4 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 main.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.0
Serial port COM4
Connecting......
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
WARNING: Detected crystal freq 41.01MHz is quite different to normalized freq 40MHz. Unsupported crystal in use?
Crystal is 40MHz
MAC: d8:bc:38:fc:d9:a0
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00043fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26464 bytes to 16498...
Writing at 0x00001000... (50 %)
Writing at 0x000076ca... (100 %)
Wrote 26464 bytes (16498 compressed) at 0x00001000 in 0.7 seconds (effective 322.6 kbit/s)...
Hash of data verified.
Compressed 212272 bytes to 111653...
Writing at 0x00010000... (14 %)
Writing at 0x0001ce7c... (28 %)
Writing at 0x00022a34... (42 %)
Writing at 0x00028aa9... (57 %)
Writing at 0x000308bb... (71 %)
Writing at 0x00039588... (85 %)
Writing at 0x0003ed93... (100 %)
Wrote 212272 bytes (111653 compressed) at 0x00010000 in 2.8 seconds (effective 617.5 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 524.8 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
